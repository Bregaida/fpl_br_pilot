#!/bin/sh
# ----------------------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
# ----------------------------------------------------------------------------

# ----------------------------------------------------------------------------
# Apache Maven Wrapper startup script (Unix)
# ----------------------------------------------------------------------------

set -euf

# Resolve current directory
basedir=$(dirname "$0")

# OS specific support (must be 'true' or 'false').
cygwin=false
darwin=false
msys=false
case "$(uname)" in
  CYGWIN*) cygwin=true ;;
  Darwin*) darwin=true ;;
  MINGW*) msys=true ;;
  MSYS*) msys=true ;;
  *) ;;
 esac

# Find Java
if [ -n "${JAVA_HOME-}" ] ; then
  JAVACMD="$JAVA_HOME/bin/java"
  if [ ! -x "$JAVACMD" ] ; then
    echo "Error: JAVA_HOME is set to an invalid directory: $JAVA_HOME" 1>&2
    echo "Please set the JAVA_HOME variable in your environment to match the" 1>&2
    echo "location of your Java installation." 1>&2
    exit 1
  fi
else
  JAVACMD="java"
  if ! command -v "$JAVACMD" >/dev/null 2>&1; then
    echo "Error: JAVA_HOME is not set and no 'java' command could be found in your PATH." 1>&2
    echo "Please set the JAVA_HOME variable in your environment to match the" 1>&2
    echo "location of your Java installation." 1>&2
    exit 1
  fi
fi

# Load wrapper config
WRAPPER_DIR="$basedir/.mvn/wrapper"
PROPS_FILE="$WRAPPER_DIR/maven-wrapper.properties"

# Extract properties
distributionUrl=
wrapperUrl=
if [ -f "$PROPS_FILE" ]; then
  distributionUrl=$(grep -E "^distributionUrl=" "$PROPS_FILE" | cut -d'=' -f2-)
  wrapperUrl=$(grep -E "^wrapperUrl=" "$PROPS_FILE" | cut -d'=' -f2-)
fi

# Prepare wrapper jar path
WRAPPER_JAR="$WRAPPER_DIR/maven-wrapper.jar"

# Function to download a file: url, dest
download() {
  url="$1"
  dest="$2"
  if command -v curl >/dev/null 2>&1; then
    curl -fsSL "$url" -o "$dest"
    return $?
  elif command -v wget >/dev/null 2>&1; then
    wget -q "$url" -O "$dest"
    return $?
  else
    return 127
  fi
}

# Ensure wrapper jar exists, download if missing
if [ ! -f "$WRAPPER_JAR" ]; then
  mkdir -p "$WRAPPER_DIR"
  if [ -n "$wrapperUrl" ]; then
    echo "Downloading Maven Wrapper Jar from: $wrapperUrl"
    if ! download "$wrapperUrl" "$WRAPPER_JAR"; then
      echo "Failed to download $wrapperUrl" 1>&2
      exit 1
    fi
  else
    echo "wrapperUrl not set in $PROPS_FILE" 1>&2
    exit 1
  fi
fi

# Setup classpath and main class
WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
CLASSPATH="$WRAPPER_JAR"

# For Cygwin/MSYS convert paths
if $cygwin || $msys ; then
  [ -n "$JAVA_HOME" ] && JAVA_HOME=$(cygpath --unix "$JAVA_HOME")
  [ -n "$WRAPPER_DIR" ] && WRAPPER_DIR=$(cygpath --unix "$WRAPPER_DIR")
  [ -n "$CLASSPATH" ] && CLASSPATH=$(cygpath --path --unix "$CLASSPATH")
fi

# JVM options
MAVEN_OPTS=${MAVEN_OPTS-}

# Execute Maven Wrapper
exec "$JAVACMD" \
  -classpath "$CLASSPATH" \
  -Dmaven.multiModuleProjectDirectory="$basedir" \
  $MAVEN_OPTS \
  $WRAPPER_LAUNCHER "$@"
